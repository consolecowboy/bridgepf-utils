{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "BridgePF Cloudformation",
  "Mappings": {
    "AWSLoadbalancerAccount": {
      "us-east-1": {"ARN": "127311923021"},
      "us-west-2": {"ARN": "797873946194"},
      "us-west-1": {"ARN": "027434742980"},
      "eu-west-1": {"ARN": "156460612806"},
      "eu-central-1": {"ARN": "054676820928"},
      "ap-southeast-1": {"ARN": "114774131450"},
      "ap-northeast-1": {"ARN": "582318560864"},
      "ap-southeast-2": {"ARN": "783225319266"},
      "ap-northeast-2": {"ARN": "600734575887"},
      "sa-east-1": {"ARN": "507241528517"}
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "App Deployment Settings" },
          "Parameters" : [      
            "EC2KeyName",
            "ElasticCacheInstanceType",
            "AppDeployBucket",
            "AppDeployFile",
            "EC2InstanceType",
            "SSLCertArn"
          ]
        },
        {
          "Label" : { "default" : "Bridge Env Settings" },
          "Parameters" : [
            "BridgeEnv",
            "BridgeUser"
          ]
        },
        {
          "Label" : { "default" : "Bridge Server Keys" },
          "Parameters" : [
            "AwsKey",
            "AwsSecretKey",
            "AwsKeyUpload",
            "AwsSecretKeyUpload",
            "AwsKeyUploadCms",
            "AwsSecretKeyUploadCms"
          ]
        },
        {
          "Label" : { "default" : "Stormpath Settings" },
          "Parameters" : [
            "EnterpriseStormpathHref",
            "EnterpriseStormpathId",
            "EnterpriseStormpathSecret"
          ]
        },
        {
          "Label": { "default" : "Bridge Server S3 buckets, will default to appropriate buckets for env if left blank"},
          "Parameters": [
            "UploadBucket",
            "AttachmentBucket",
            "UploadCMSCertBucket",
            "UploadCMSPrivBucket",
            "ConsentsBucket"
          ]
        },
        {
          "Label" : { "default" : "Bridge Server Config File Settings, empty settings will not be set, defaulting to conf/bridge-server.conf" },
          "Parameters" : [
            "AdminEmail",
            "AdminPassword",
            "AsyncWorkerThreadCount",
        
            "BridgeHealthcodeKey",
            "BridgeHealthcodeRedisKey",

            "DDBMaxRetries",
        
            "FphsIdAddLimit",
            "ExternalIdAddLimit",
            "HostPostfix",
            "WebservicesUrl",
            "UddSqsQueueUrl",
            "StudyWhitelist",
        
            "EmailUnsubscribeToken",
        
            "ExporterSynapseId",
        
            "ExternalIdLockDuration",
        
            "MaxNumZipEntries",
            "ZipEntrySize",

            "Route53Zone",
            "SnsKey",
            "SnsSecretKey",
        
            "SupportEmail",
            "SynapseApiKey",
            "SynapseUser",
            "SysopsEmail",
        
            "TestSynapseUserId"
          ]
        },
        {
          "Label": {"default": "Redis Client Tuning, empty settings will not be set, defaulting to conf/bridge-server.conf "},
          "Parameters": [
            "RedisMaxTotal",
            "RedisMinIdle",
            "RedisMaxIdle",
            "RedisTimeout"
          ]
        }
      ]
    }
  },
  "Parameters": {
    "EC2KeyName": {
      "Description": "The EC2 Key Pair to allow SSH access to appservers",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "SSLCertArn": {
      "Description": "SSL certificate for load balancer",
      "Type": "String",
      "Default": "arn:aws:acm:us-east-1:468177950700:certificate/8cad672c-3e8e-4727-89d1-625e051608a9"
    },
    "BridgeEnv": {
      "Type": "String"
    },
    "BridgeUser": {
      "Type": "String"
    },
    "ElasticCacheInstanceType": {
      "Type": "String",
      "Description": "Instance type to use for Elastic Cache cluster",
      "Default": "cache.t2.micro",
      "AllowedValues": [
        "cache.t2.micro",
        "cache.t2.small",
        "cache.t2.medium",
        "cache.m3.medium",
        "cache.m3.large",
        "cache.m3.xlarge",
        "cache.m3.2xlarge",
        "cache.r3.large",
        "cache.r3.xlarge",
        "cache.r3.2xlarge",
        "cache.r3.4xlarge",
        "cache.r3.8xlarge"
      ]
    },
    "EC2InstanceType": {
      "Type": "String",
      "Description": "Instance type to use for Elastic Beanstalk Instances",
      "Default": "t2.small",
      "AllowedValues": [
        "t1.micro",
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "t2.xlarge",
        "t2.2xlarge",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "m4.16xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "cr1.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "r4.large",
        "r4.xlarge",
        "r4.2xlarge",
        "r4.4xlarge",
        "r4.8xlarge",
        "r4.16xlarge",
        "x1.16xlarge",
        "x1.32xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "cc1.4xlarge",
        "cc2.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "cg1.4xlarge",
        "p2.xlarge",
        "p2.8xlarge",
        "p2.16xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "f1.2xlarge",
        "f1.16xlarge"
      ]
    },
    "AppDeployBucket": {
      "Type": "String",
      "Description": "S3 bucket for deployment",
      "Default": "com-museborn-deployment-dev"
    },
    "AppDeployFile": {
      "Type": "String",
      "Description": "S3 file to deploy to elastic beanstalk",
      "Default": "elasticbeanstalk.zip"
    },

    "UploadBucket": {
      "Type": "String",
      "Default": "com-museborn-upload-dev"
    },
    "AttachmentBucket": {
      "Type": "String",
      "Default": "com-museborn-attachment-dev"
    },
    "UploadCMSCertBucket": {
      "Type": "String",
      "Default": "com-museborn-upload-cms-cert-dev"
    },
    "UploadCMSPrivBucket": {
      "Type": "String",
      "Default": "com-museborn-upload-cms-priv-dev"
    },
    "ConsentsBucket": {
      "Type": "String",
      "Default": "com-museborn-consents-dev"
    },

    "AdminEmail": {
      "Type": "String"
    },
    "AdminPassword": {
      "Type": "String",
      "NoEcho": true
    },
    "AsyncWorkerThreadCount": {
      "Type": "String"
    },

    "AwsKey": {
      "Type": "String",
      "Default": "AWS"
    },
    "AwsSecretKey": {
      "Type": "String",
      "Default": "AWS"
    },
    "AwsKeyUpload": {
      "Type": "String",
      "Default": "AWS"
    },
    "AwsSecretKeyUpload": {
      "Type": "String",
      "Default": "AWS"
    },
    "AwsKeyUploadCms": {
      "Type": "String",
      "Default": "AWS"
    },
    "AwsSecretKeyUploadCms": {
      "Type": "String",
      "Default": "AWS"
    },

    "BridgeHealthcodeKey": {
      "Type": "String"
    },
    "BridgeHealthcodeRedisKey": {
      "Type": "String"
    },

    "DDBMaxRetries": {
      "Type": "String"
    },

    "FphsIdAddLimit": {
      "Type": "String"
    },
    "ExternalIdAddLimit": {
      "Type": "String"
    },
    "HostPostfix": {
      "Type": "String"
    },
    "WebservicesUrl": {
      "Type": "String"
    },
    "UddSqsQueueUrl": {
      "Type": "String"
    },
    "StudyWhitelist": {
      "Type": "String"
    },

    "EmailUnsubscribeToken": {
      "Type": "String"
    },

    "EnterpriseStormpathHref": {
      "Type": "String",
      "Default": "https://enterprise.stormpath.io/v1/applications/1aa2QCILgHxWVt68TM9rYR"
    },
    "EnterpriseStormpathId": {
      "Type": "String"
    },
    "EnterpriseStormpathSecret": {
      "Type": "String",
      "NoEcho": true
    },

    "ExporterSynapseId": {
      "Type": "String"
    },

    "ExternalIdLockDuration": {
      "Type": "String"
    },

    "MaxNumZipEntries": {
      "Type": "String"
    },
    "ZipEntrySize": {
      "Type": "String"
    },

    "RedisMaxTotal": {
      "Type": "String"
    },
    "RedisMinIdle": {
      "Type": "String"
    },
    "RedisMaxIdle": {
      "Type": "String"
    },
    "RedisTimeout": {
      "Type": "String"
    },

    "Route53Zone": {
      "Type": "String"
    },
    "SnsKey": {
      "Type": "String"
    },
    "SnsSecretKey": {
      "Type": "String",
      "NoEcho": true
    },

    "SupportEmail": {
      "Type": "String"
    },
    "SynapseApiKey": {
      "Type": "String"
    },
    "SynapseUser": {
      "Type": "String"
    },
    "SysopsEmail": {
      "Type": "String"
    },
    "TestSynapseUserId": {
      "Type": "String"
    }
  },
  "Resources": {
    "DDBPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "dynamodb:*",
              "Resource": "*"
            }
          ]
        },
        "PolicyName": "DynamoAccessPolicy",
        "Roles": [
          {
            "Ref": "AppserverRole"
          }
        ]
      }
    },
    "S3Policy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "s3:*",
              "Resource": [
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"AttachmentBucket"}
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"UploadBucket"}
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"ConsentsBucket"}
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"UploadCMSCertBucket"}
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"UploadCMSPrivBucket"}
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"AppDeployBucket"}
                  ]]

                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"AttachmentBucket"}, "/*"
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"UploadBucket"}, "/*"

                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"ConsentsBucket"}, "/*"
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"UploadCMSCertBucket"}, "/*"
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"UploadCMSPrivBucket"}, "/*"
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"AppDeployBucket"}, "/*"
                  ]]

                }
              ]
            }
          ]
        },
        "PolicyName": "AppS3AccessPolicy",
        "Roles": [
          {
            "Ref": "AppserverRole"
          }
        ]
      }
    },
    "SnsAccessPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sns:*"
              ],
              "Resource": "*"
            }
          ]
        },
        "PolicyName": "AllowSNSAccess",
        "Roles": [
          {
            "Ref": "AppserverRole"
          }
        ]
      }
    },
    "Ec2PullPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:DescribeInstances"
              ],
              "Resource": "*"
            }
          ]
        },
        "PolicyName": "AllowEC2Pull",
        "Roles": [
          {
            "Ref": "AppserverRole"
          }
        ]
      }
    },
    "AppserverRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "AppserverInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "AppserverRole"
          }
        ]
      }
    },
    "ECSecurityGroup": {
      "Type": "AWS::ElastiCache::SecurityGroup",
      "Properties": {
        "Description": "Elasticache Security Group"
      }
    },
    "ECSecurityGroupIngress": {
      "Type": "AWS::ElastiCache::SecurityGroupIngress",
      "Properties": {
        "CacheSecurityGroupName": {"Ref": "ECSecurityGroup"},
        "EC2SecurityGroupName": {"Ref": "BridgeAppServers"},
        "EC2SecurityGroupOwnerId": {"Ref": "AWS::AccountId"}
      }
    },
    "ECCluster": {
      "Type": "AWS::ElastiCache::CacheCluster",
      "Properties": {
        "AutoMinorVersionUpgrade": "true",
        "Engine": "redis",
        "CacheNodeType": {
          "Ref": "ElasticCacheInstanceType"
        },
        "NumCacheNodes": "1",
        "CacheSecurityGroupNames": [{"Ref": "ECSecurityGroup"}]
      },
      "DependsOn": "ECSecurityGroup"
    },

    "BridgeAppServers": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for appserver instances",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "BridgeApplication": {
      "Type": "AWS::ElasticBeanstalk::Application",
      "Properties": {
        "Description": {
          "Fn::Join": [
            " ",
            [
              "Bridge PF Application:",
              {
                "Ref": "BridgeUser"
              },
              {
                "Ref": "BridgeEnv"
              }
            ]
          ]
        }
      }
    },
    "BridgeConfigurationTemplate": {
      "Type": "AWS::ElasticBeanstalk::ConfigurationTemplate",
      "Properties": {
        "ApplicationName": { "Ref": "BridgeApplication" },
        "Description": "AWS ElasticBeanstalk BridgePF Configuration Template",
        "OptionSettings": [
          {
            "Namespace": "aws:autoscaling:asg",
            "OptionName": "MinSize",
            "Value": "1"
          },
          {
            "Namespace": "aws:autoscaling:asg",
            "OptionName": "MaxSize",
            "Value": "3"
          },
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "IamInstanceProfile",
            "Value": {"Ref": "AppserverInstanceProfile"}
          },
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "InstanceType",
            "Value": {"Ref": "EC2InstanceType"}
          },
          {
            "Namespace": "aws:elasticbeanstalk:environment",
            "OptionName": "EnvironmentType",
            "Value": "LoadBalanced"
          },
          {
            "Namespace": "aws:elb:listener:443",
            "OptionName": "ListenerProtocol",
            "Value": "HTTPS"
          },
          {
            "Namespace": "aws:elb:listener:443",
            "OptionName": "InstanceProtocol",
            "Value": "HTTP"
          },
          {
            "Namespace": "aws:elb:listener:443",
            "OptionName": "InstancePort",
            "Value": "80"
          },
          {
            "Namespace": "aws:elb:listener:443",
            "OptionName": "SSLCertificateId",
            "Value": { "Ref": "SSLCertArn" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "bridge_env",
            "Value" : { "Ref" : "BridgeEnv" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "bridge_user",
            "Value" : { "Ref" : "BridgeUser" }
          },

          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "admin_email",
            "Value" : { "Ref" : "AdminEmail" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "admin_password",
            "Value" : { "Ref" : "AdminPassword" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "async_worker_thread_count",
            "Value" : { "Ref" : "AsyncWorkerThreadCount" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "aws_key",
            "Value" : { "Ref" : "AwsKey" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "aws_secret_key",
            "Value" : { "Ref" : "AwsSecretKey" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "aws_key_upload",
            "Value" : { "Ref" : "AwsKeyUpload" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "aws_secret_key_upload",
            "Value" : { "Ref" : "AwsSecretKeyUpload" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "aws_key_upload_cms",
            "Value" : { "Ref" : "AwsKeyUploadCms" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "aws_secret_key_upload_cms",
            "Value" : { "Ref" : "AwsSecretKeyUploadCms" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "bridge_healthcode_key",
            "Value" : { "Ref" : "BridgeHealthcodeKey" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "bridge_healthcode_redis_key",
            "Value" : { "Ref" : "BridgeHealthcodeRedisKey" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "ddb_max_retries",
            "Value" : { "Ref" : "DDBMaxRetries" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : {"Fn::Join": ["_", [{"Ref":"BridgeEnv"},"fphs","id","add","limit"]]},
            "Value" : { "Ref" : "FphsIdAddLimit" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : {"Fn::Join": ["_", [{"Ref":"BridgeEnv"},"external","id","add","limit"]]},
            "Value" : { "Ref" : "ExternalIdAddLimit" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : {"Fn::Join": ["_", [{"Ref":"BridgeEnv"},"host","postfix"]]},
            "Value" : { "Ref" : "HostPostfix" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : {"Fn::Join": ["_", [{"Ref":"BridgeEnv"},"webservices","url"]]},
            "Value" : { "Ref" : "WebservicesUrl" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : {"Fn::Join": ["_", [{"Ref":"BridgeEnv"},"upload","bucket"]]},
            "Value" : { "Ref" : "UploadBucket" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : {"Fn::Join": ["_", [{"Ref":"BridgeEnv"},"attachment","bucket"]]},
            "Value" : { "Ref" : "AttachmentBucket" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : {"Fn::Join": ["_", [{"Ref":"BridgeEnv"},"upload","cms","cert","bucket"]]},
            "Value" : { "Ref" : "UploadCMSCertBucket" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : {"Fn::Join": ["_", [{"Ref":"BridgeEnv"},"upload","cms","priv","bucket"]]},
            "Value" : { "Ref" : "UploadCMSPrivBucket" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : {"Fn::Join": ["_", [{"Ref":"BridgeEnv"},"consents","bucket"]]},
            "Value" : { "Ref" : "ConsentsBucket" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : {"Fn::Join": ["_", [{"Ref":"BridgeEnv"},"udd","sqs","queue","url"]]},
            "Value" : { "Ref" : "UddSqsQueueUrl" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : {"Fn::Join": ["_", [{"Ref":"BridgeEnv"},"study","whitelist"]]},
            "Value" : { "Ref" : "StudyWhitelist" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "email_unsubscribe_token",
            "Value" : { "Ref" : "EmailUnsubscribeToken" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "enterprise_stormpath_application_href",
            "Value" : { "Ref" : "EnterpriseStormpathHref" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "enterprise_stormpath_id",
            "Value" : { "Ref" : "EnterpriseStormpathId" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "enterprise_stormpath_secret",
            "Value" : { "Ref" : "EnterpriseStormpathSecret" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "exporter_synapse_id",
            "Value" : { "Ref" : "ExporterSynapseId" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "external_id_lock_duration",
            "Value" : { "Ref" : "ExternalIdLockDuration" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "max_num_zip_entries",
            "Value" : { "Ref" : "MaxNumZipEntries" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "max_num_entry_size",
            "Value" : { "Ref" : "ZipEntrySize" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "redis_max_total",
            "Value" : { "Ref" : "RedisMaxTotal" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "redis_min_idle",
            "Value" : { "Ref" : "RedisMinIdle" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "redis_max_idle",
            "Value" : { "Ref" : "RedisMaxIdle" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "redis_timeout",
            "Value" : { "Ref" : "RedisTimeout" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "redis_url",
            "Value" : {"Fn::Join": ["",
              [
                "redis://AWS:AWS@",
                {"Fn::GetAtt": ["ECCluster", "RedisEndpoint.Address"]},
                ":",
                {"Fn::GetAtt": ["ECCluster", "RedisEndpoint.Port"]}
              ]]}
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "route53_zone",
            "Value" : { "Ref" : "Route53Zone" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "sns_key",
            "Value" : { "Ref" : "SnsKey" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "sns_secret_key",
            "Value" : { "Ref" : "SnsSecretKey" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "support_email",
            "Value" : { "Ref" : "SupportEmail" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "synapse_api_key",
            "Value" : { "Ref" : "SynapseApiKey" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "synapse_user",
            "Value" : { "Ref" : "SynapseUser" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "sysops_email",
            "Value" : { "Ref" : "SysopsEmail" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "test_synapse_user_id",
            "Value" : { "Ref" : "TestSynapseUserId" }
          }
        ],
        "SolutionStackName": "64bit Amazon Linux 2016.09 v2.4.2 running Java 8"
      }
    },
    "BridgeApplicationVersion": {
      "Type": "AWS::ElasticBeanstalk::ApplicationVersion",
      "Properties": {
        "ApplicationName": {"Ref": "BridgeApplication"},
        "Description": "Initial Application Version",
        "SourceBundle": {
          "S3Bucket": { "Ref": "AppDeployBucket"},
          "S3Key": {"Ref": "AppDeployFile"}
        }
      }
    },
    "BridgeEnvironment": {
      "Type": "AWS::ElasticBeanstalk::Environment",
      "Properties": {
        "ApplicationName": { "Ref": "BridgeApplication" },
        "Description": "AWS ElasticBeanstalk BridgePF Environment",
        "TemplateName": { "Ref": "BridgeConfigurationTemplate" },
        "VersionLabel": { "Ref": "BridgeApplicationVersion" },
        "OptionSettings": [
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "EC2KeyName",
            "Value": {"Ref": "EC2KeyName"}
          },
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "SecurityGroups",
            "Value": { "Ref": "BridgeAppServers" }
          }
        ]
      }
    }
  }
}