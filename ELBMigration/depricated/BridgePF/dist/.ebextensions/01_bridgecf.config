files:
  "/root/build-bridge-server-conf.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
        #!/bin/bash
        # Script to dynamically build bridge server config from env variables
        # Brian Holt <beholt@gmail.com> 02.09.2017
        mkdir /home/webapp/.bridge
        chown ${EXECUSER} /home/webapp/.bridge

        cat <<- EOF > /home/webapp/.bridge/bridge-server.conf
        bridge.env=${bridge_env:-dummy-value}
        bridge.user=${bridge_user:-dummy-value}

        admin.email = ${admin_email:-dummy-value}
        admin.password = ${admin_password:-dummy-value}

        async.worker.thread.count = ${async_worker_thread_count:-20}

        aws.key = ${default_aws_key:-AWS}
        aws.secret.key = ${default_aws_secret_key:-AWS}

        aws.key.upload = ${aws_key_upload:-AWS}
        aws.secret.key.upload = ${aws_secret_key_upload:-AWS}

        aws.key.upload.cms = ${aws_key_upload_cms:-AWS}
        aws.secret.key.upload.cms = ${aws_secret_key_upload_cms:-AWS}

        bridge.healthcode.key = ${bridge_healthcode_key:-KST6Md7/phHLZg+1FBgbmngKi53K/e7gLptQOEDii0M=}
        bridge.healthcode.redis.key = ${bridge_healthcode_redis_key:-zEjhUL/FVsN8vti6HO27XgrM32i1a3huEuXWD4Hq06I=}

        ddb.max.retries = ${ddb_max_retries:-1}

        dev.fphs.id.add.limit = ${dev_fphs_id_add_limit:-100}
        dev.external.id.add.limit = ${dev_external_id_add_limit:-100}
        dev.host.postfix = ${dev_host_postfix:--develop.sagebridge.org}
        dev.webservices.url = ${dev_webservices_url:-https://webservices-develop.sagebridge.org}
        dev.upload.bucket = ${dev_upload_bucket:-org-sagebridge-upload-develop}
        dev.attachment.bucket = ${dev_attachment_bucket:-org-sagebridge-attachment-develop}
        dev.upload.cms.cert.bucket = ${dev_upload_cms_cert_bucket:-org-sagebridge-upload-cms-cert-develop}
        dev.upload.cms.priv.bucket = ${dev_upload_cms_priv_bucket:-org-sagebridge-upload-cms-priv-develop}
        dev.consents.bucket = ${dev_consents_bucket:-org-sagebridge-consents-dev}
        dev.udd.sqs.queue.url = ${dev_udd_sqs_queue_url:-https://sqs.us-east-1.amazonaws.com/649232250620/Bridge-WorkerPlatform-Request-dev}
        dev.study.whitelist = ${dev_study_whitelist:-api}

        email.unsubscribe.token = ${email_unsubscribe_token:-dummy-value}

        enterprise.stormpath.application.href = ${enterprise_stormpath_application_href:-dummy-value}
        enterprise.stormpath.id = ${enterprise_stormpath_id:-dummy-value}
        enterprise.stormpath.secret = ${enterprise_stormpath_secret:-dummy-value}

        exporter.synapse.id = ${exporter_synapse_id:-3325672}

        external.id.lock.duration = ${external_id_lock_duration:-30000}

        local.fphs.id.add.limit = ${local_fphs_id_add_limit:-100}
        local.external.id.add.limit = ${local_external_id_add_limit:-100}
        local.host.postfix = ${local_host_postfix:--local.sagebridge.org}
        local.webservices.url = ${local_webservices_url:-http://localhost:9000}
        local.upload.bucket = ${local_upload_bucket:-org-sagebridge-upload-local}
        local.attachment.bucket = ${local_attachment_bucket:-org-sagebridge-attachment-local}
        local.upload.cms.cert.bucket = ${local_upload_cms_cert_bucket:-org-sagebridge-upload-cms-cert-local}
        local.upload.cms.priv.bucket = ${local_upload_cms_priv_bucket:-org-sagebridge-upload-cms-priv-local}
        local.consents.bucket = ${local_consents_bucket:-org-sagebridge-consents-local}
        local.udd.sqs.queue.url = ${local_udd_sqs_queue_url:-https://sqs.us-east-1.amazonaws.com/649232250620/Bridge-WorkerPlatform-Request-local}
        local.study.whitelist = ${local_study_whitelist:-api}

        max.num.zip.entries = ${max_num_zip_entries:-100}
        max.zip.entry.size = ${max_zip_entry_size:-25000000}

        prod.fphs.id.add.limit = ${prod_fphs_id_add_limit:-100}
        prod.external.id.add.limit = ${prod_external_id_add_limit:-100}
        prod.host.postfix = ${prod_host_postfix:-.sagebridge.org}
        prod.webservices.url = ${prod_webservices_url:-https://webservices.sagebridge.org}
        prod.upload.bucket = ${prod_upload_bucket:-org-sagebridge-upload-prod}
        prod.attachment.bucket = ${prod_attachment_bucket:-org-sagebridge-attachment-prod}
        prod.upload.cms.cert.bucket = ${prod_upload_cms_cert_bucket:-org-sagebridge-upload-cms-cert-prod}
        prod.upload.cms.priv.bucket = ${prod_upload_cms_priv_bucket:-org-sagebridge-upload-cms-priv-prod}
        prod.consents.bucket = ${prod_consents_bucket:-org-sagebridge-consents-prod}
        prod.udd.sqs.queue.url = ${prod_udd_sqs_queue_url:-https://sqs.us-east-1.amazonaws.com/649232250620/Bridge-WorkerPlatform-Request-prod}
        prod.study.whitelist = ${prod_study_whitelist:-api,asthma,breastcancer,cardiovascular,diabetes,fphs,fphs-lab,ohsu-molemapper,parkinson,parkinson-lux,lilly}

        redis.max.total = ${redis_max_total:-50}
        redis.min.idle = ${redis_min_idle:-3}
        redis.max.idle = ${redis_max_idle:-50}
        redis.timeout = ${redis_timeout:-2000}
        redis.url = ${redis_url:-redis://provider:password@localhost:6379}

        route53.zone = ${route53_zone:-ZP0HNVK1V670D}
        sns.key = ${sns_key:-dummy-value}
        sns.secret.key = ${sns_secret_key:-dummy-value}

        support.email = ${support_email:-Bridge (Sage Bionetworks) <support@sagebridge.org>}

        synapse.api.key = ${your-api-key-here}
        synapse.user = ${synapse_usr:-your-username-here}
        sysops.email = ${sysop_email:-Bridge IT <bridge-testing+sysops@sagebase.org>}

        test.synapse.user.id = ${test_synapse_user_id:-3348228}

        uat.fphs.id.add.limit = ${uat_fphs_id_add_limit:-100}
        uat.external.id.add.limit = ${uat_external_id_add_limit:-100}
        uat.host.postfix = ${uat_host_postfix:-staging.sagebridge.org}
        uat.webservices.url = ${uat_webservices_url:-https://webservices-staging.sagebridge.org}
        uat.upload.bucket = ${uat_upload_bucket:-org-sagebridge-upload-uat}
        uat.attachment.bucket = ${uat_attachment_bucket:-org-sagebridge-attachment-uat}
        uat.upload.cms.cert.bucket = ${uat_upload_cms_cert_bucket:-org-sagebridge-upload-cms-cert-uat}
        uat.upload.cms.priv.bucket = ${uat_upload_cms_priv_bucket:-org-sagebridge-upload-cms-priv-uat}
        uat.consents.bucket = ${uat_consents_bucket:-org-sagebridge-consents-uat}
        uat.udd.sqs.queue.url = ${uat_udd_sqs_queue_url:-https://sqs.us-east-1.amazonaws.com/649232250620/Bridge-WorkerPlatform-Request-uat}
        uat.study.whitelist = ${uat_study_whitelist:-api,ios-sdk-int-tests,asthma,cardiovascular}

        upload.cms.certificate.city = ${upload_cms_certificate_city:-Seattle}
        upload.cms.certificate.country = ${upload_cms_certificate_country:-US}
        upload.cms.certificate.email = ${upload_cms_certificate_email:-bridgeIT@sagebase.org}
        upload.cms.certificate.organization = ${upload_cms_certificate_organization:-Sage Bionetworks}
        upload.cms.certificate.state = ${upload_cms_certificate_state:-WA}
        upload.cms.certificate.team = ${upload_cms_certificate_team:-Bridge}
        upload.dupe.study.whitelist = ${upload_dupe_study_whitelist:-api}
        EOF

container_commands:
  set_up:
    command: /root/build-bridge-server-conf.sh
